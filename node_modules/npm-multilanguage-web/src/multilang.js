const translate = function (options) {
    this.idioma = localStorage.getItem('idioma');
    this.idioma = (this.idioma == null)?options.default:this.idioma;

    fetch('/lang/'+this.idioma+'.json')
        .then(response => response.json())
        .then(fileJson => {
            let dataKey = document.querySelectorAll('.'+options.classElements);
            dataKey.forEach(function (element, key) {
                let searchKeyInJson = element.getAttribute(options.attrKey);
                let textResult = searchInJson(fileJson, searchKeyInJson);
                element.innerHTML = textResult ;
            })
        });

    let btnChangeLang = document.querySelectorAll('.'+options.btnClassChange);
    btnChangeLang.forEach(function (element) {
        element.addEventListener("click", function (e) {
            localStorage.setItem('idioma',this.dataset.lang);
            location.reload();
        });
    })
};

const searchInJson = function (json, search){
    let arraySearch  = search.split(".");
    let response = '';
    // Nivel del json | Para revisar luego con mas calma esta funcion | Buscar forma mas optima
    switch (arraySearch.length) {
        case 1:
            response = json[arraySearch[0]][arraySearch[1]];
            break
        case 2:
            response = json[arraySearch[0]][arraySearch[1]];
            break
        case 3:
            response = json[arraySearch[0]][arraySearch[1]][arraySearch[2]];
            break
        case 4:
            response = json[arraySearch[0]][arraySearch[1]][arraySearch[2]][arraySearch[3]];
            break
        case 5:
            response = json[arraySearch[0]][arraySearch[1]][arraySearch[2]][arraySearch[3]][arraySearch[4]];
            break
    }
    return response;
}

module.exports = {translate: translate};